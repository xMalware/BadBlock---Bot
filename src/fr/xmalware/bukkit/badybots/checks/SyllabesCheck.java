package fr.xmalware.bukkit.badybots.checks;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.bukkit.event.player.PlayerCommandPreprocessEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerLoginEvent;
import org.bukkit.event.player.PlayerQuitEvent;

import fr.xmalware.bukkit.badybots.checks.abstracts.Check;
import fr.xmalware.bukkit.badybots.checks.abstracts.CheckResponse;
import fr.xmalware.bukkit.badybots.checks.abstracts.CheckType;

public class SyllabesCheck extends Check {

	public SyllabesCheck() {
		super(CheckType.SYLLABES_CHECK);
	}

	@Override
	public CheckResponse onLogin(PlayerLoginEvent event) {
		CheckResponse checkResponse = CheckResponse.ALLOW;
		String playerName = event.getPlayer().getName().toLowerCase();
		if (lengthWithoutDigits(playerName) >= 5) {
			int count = countSyllables(playerName);
			if (count < 1) {
				checkResponse = CheckResponse.KICK;
			}
		}
		return checkResponse;
	}

	@Override
	public CheckResponse onJoin(PlayerJoinEvent event) {
		return CheckResponse.ALLOW;
	}

	@Override
	public CheckResponse onCommandPreprocess(PlayerCommandPreprocessEvent event) {
		return CheckResponse.ALLOW;
	} 
	
	@Override
	public void onPlayerQuit(PlayerQuitEvent event) {
	}

	protected int lengthWithoutDigits(String string) {
		int result = 0;
		for (char c : string.toCharArray()) {
			if (!Character.isDigit(c))
				result++;
		}
		return result;
	}
	
	protected int countSyllables(String word)
	{
		int count = 0;
		word = word.toLowerCase();
		if (word.charAt(word.length() - 1) == 'e')
		{
			if (silente(word))
			{
				String newword = word.substring(0, word.length() - 1);
				count += countit(newword);
			}
			else
			{
				count++;
			}
		}
		else {
			count += countit(word);
		}
		return count;
	}

	private int countit(String word)
	{
		int count = 0;
		Pattern splitter = Pattern.compile("[^aeiouy]*[aeiouy]+");
		Matcher m = splitter.matcher(word);
		while (m.find()) {
			count++;
		}
		return count;
	}

	private boolean silente(String word)
	{
		word = word.substring(0, word.length() - 1);

		Pattern yup = Pattern.compile("[aeiouy]");
		Matcher m = yup.matcher(word);
		if (m.find()) {
			return true;
		}
		return false;
	}

}
